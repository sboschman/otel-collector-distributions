name: Release Please

on:
  push:
    branches:
      - main

jobs:
  release_please:
    name: Release Please
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: googleapis/release-please-action@v4
        name: Release Please
        id: release-please
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          config-file: .github/release-please-config.json
          manifest-file: .github/release-please-manifest.json
      - uses: actions/github-script@v8
        if: steps.release-please.outputs.releases_created == 'true'
        name: Create dispatch payload
        id: github-releases
        with:
          script: |
            const paths_released = JSON.parse(JSON.stringify(${{ steps.release-please.outputs.paths_released }}))
            const releases_output = JSON.parse(JSON.stringify(${{ toJSON(steps.release-please.outputs) }}))
            const github_releases = []
            for(const path of paths_released){
              github_releases.push(
                {
                  path: path,
                  package: path.includes('helm/') ? path.replace(/^.+\//,''): '${{ github.repository }}'.replace(/^.+\//,''),
                  version: releases_output[`${path}--version`] || releases_output['version'],
                  package_type: path.replace(/^\.|\/.*/, '') || 'docker',
                  tag_name: releases_output[`${path}--tag_name`] || releases_output['version']
                }
              )
            }
            return github_releases
      - run: echo ${{ steps.github-releases.outputs.result }}
      - uses: peter-evans/repository-dispatch@v3
        if: steps.release-please.outputs.releases_created == 'true'
        name: Repository Dispatch
        with:
          event-type: publish-assets
          client-payload: '{"releases": ${{ steps.github-releases.outputs.result }}}'
      - uses: actions/checkout@v4
        if: steps.release-please.outputs.releases_created == 'true'
        name: Checkout
      - name: Prepare for next release
        if: steps.release-please.outputs.releases_created == 'true'
        run: |-
          yq -i '.dist.version = "0.0.0-dev"' distributions/**/manifest.yaml
      - uses: stefanzweifel/git-auto-commit-action@v5
        if: steps.release-please.outputs.releases_created == 'true'
        name: Commit
        with:
          commit_message: "build: Prepare for next release"
          file_pattern: "distributions/**/manifest.yaml"
